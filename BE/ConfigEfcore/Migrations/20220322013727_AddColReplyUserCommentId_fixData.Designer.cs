// <auto-generated />
using System;
using CongfigEfcore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConfigEfcore.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220322013727_AddColReplyUserCommentId_fixData")]
    partial class AddColReplyUserCommentId_fixData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CongfigEfcore.Models.CommentGroup", b =>
                {
                    b.Property<string>("CommentId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CommentId");

                    b.HasIndex("GroupId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = "1",
                            GroupId = "1"
                        },
                        new
                        {
                            CommentId = "2",
                            GroupId = "1"
                        });
                });

            modelBuilder.Entity("CongfigEfcore.Models.Group", b =>
                {
                    b.Property<string>("GroupId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            GroupId = "1",
                            Name = "detail"
                        });
                });

            modelBuilder.Entity("CongfigEfcore.Models.UserComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CommentGroupId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReplyUserCommentId")
                        .HasColumnType("int");

                    b.Property<string>("ReplyUserId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Text")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CommentGroupId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentGroupId = "1",
                            CreateAt = new DateTime(2000, 8, 27, 3, 11, 48, 0, DateTimeKind.Unspecified),
                            Name = "Nguyễn Thanh Huy",
                            ReplyUserCommentId = -1,
                            ReplyUserId = "",
                            Text = "How to build comment chat Ef core?",
                            UserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            CommentGroupId = "1",
                            CreateAt = new DateTime(2000, 8, 27, 3, 12, 55, 0, DateTimeKind.Unspecified),
                            Name = "Nguyễn Thị Thu Diệu",
                            ReplyUserCommentId = 1,
                            ReplyUserId = "1",
                            Text = "wacth yuotube and i have link create db https://code-maze.com/entity-framework-core-series/",
                            UserId = "2"
                        },
                        new
                        {
                            Id = 3,
                            CommentGroupId = "1",
                            CreateAt = new DateTime(2000, 8, 27, 3, 13, 56, 0, DateTimeKind.Unspecified),
                            Name = "Nguyễn Thanh Huy",
                            ReplyUserCommentId = 2,
                            ReplyUserId = "2",
                            Text = "yeah tks yous, i try!",
                            UserId = "1"
                        },
                        new
                        {
                            Id = 4,
                            CommentGroupId = "1",
                            CreateAt = new DateTime(2000, 8, 27, 4, 15, 20, 0, DateTimeKind.Unspecified),
                            Name = "Amino Oreki",
                            ReplyUserCommentId = 2,
                            ReplyUserId = "2",
                            Text = "wow , great link , tks you?",
                            UserId = "3"
                        },
                        new
                        {
                            Id = 5,
                            CommentGroupId = "1",
                            CreateAt = new DateTime(2000, 8, 27, 3, 13, 41, 0, DateTimeKind.Unspecified),
                            Name = "Nguyễn Văn A",
                            ReplyUserCommentId = 1,
                            ReplyUserId = "1",
                            Text = "inbox me ...",
                            UserId = "4"
                        },
                        new
                        {
                            Id = 6,
                            CommentGroupId = "2",
                            CreateAt = new DateTime(2000, 10, 27, 2, 45, 41, 0, DateTimeKind.Unspecified),
                            Name = "Nguyễn Thị Thu Diệu",
                            ReplyUserCommentId = -1,
                            ReplyUserId = "",
                            Text = "Kiến thức thật tuyệt vời , thật tuyệt khi được biết đến chúng!",
                            UserId = "2"
                        },
                        new
                        {
                            Id = 7,
                            CommentGroupId = "2",
                            CreateAt = new DateTime(2000, 10, 27, 2, 46, 2, 0, DateTimeKind.Unspecified),
                            Name = "Nguyễn Thanh Huy",
                            ReplyUserCommentId = 6,
                            ReplyUserId = "2",
                            Text = "không có chi nè!",
                            UserId = "1"
                        });
                });

            modelBuilder.Entity("CongfigEfcore.Models.CommentGroup", b =>
                {
                    b.HasOne("CongfigEfcore.Models.Group", "Group")
                        .WithMany("CommentGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("CongfigEfcore.Models.UserComment", b =>
                {
                    b.HasOne("CongfigEfcore.Models.CommentGroup", "CommentGroup")
                        .WithMany("UserComments")
                        .HasForeignKey("CommentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommentGroup");
                });

            modelBuilder.Entity("CongfigEfcore.Models.CommentGroup", b =>
                {
                    b.Navigation("UserComments");
                });

            modelBuilder.Entity("CongfigEfcore.Models.Group", b =>
                {
                    b.Navigation("CommentGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
